
# Generated by Django 3.2.18 on 2023-05-26 18:30

import django.db.models.deletion
from django.db import migrations, models, transaction


@transaction.atomic
def set_import_records_ali(apps, schema_editor):
    ImportRecord = apps.get_model('data_importer', 'ImportRecord')
    AccessLevelInstance = apps.get_model('orgs', 'AccessLevelInstance')

    import_records = ImportRecord.objects.all()
    for import_record in import_records:
        org = import_record.super_organization

        if org is None:
            raise ValueError(f"ImportRecord with pk {import_record.pk} has no super_organization, and is thus orphaned. This shouldn't have happened and this ImportRecord cannot be migrated. Please add a super_organization or delete the ImportRecord and try again.")
        else:
            ali = AccessLevelInstance.objects.get(organization=org, depth=1)

        import_record.access_level_instance = ali
        import_record.save()


class Migration(migrations.Migration):

    dependencies = [
        ('orgs', '0029_auto_20230413_1250'),
        ('data_importer', '0018_importfile_multiple_cycle_upload'),
    ]

    operations = [
        migrations.AddField(
            model_name='importrecord',
            name='access_level_instance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='import_record', to='orgs.accesslevelinstance'),
        ),
        migrations.RunPython(set_import_records_ali, reverse_code=migrations.RunPython.noop),
        migrations.AlterField(
            model_name='importrecord',
            name='access_level_instance',
            field=models.ForeignKey(null=False, on_delete=django.db.models.deletion.CASCADE, related_name='import_record', to='orgs.accesslevelinstance'),
        ),
    ]
