# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2017-01-19 21:18
from __future__ import unicode_literals

from django.db import migrations

from seed.models.columns import Column, ColumnMapping


def duplicate_column(apps, column):
    Column = apps.get_model("seed", "Column")

    new_c = Column.objects.get(pk=column.id)
    new_c.pk = None
    new_c.save()

    return new_c


def split_duplicate_mapping(apps, cm):
    if cm.column_raw.count() == 0 or cm.column_mapped.count() == 0:
        raise Exception("column_raw or column_mapped is none")

    if cm.column_raw.count() > 1 or cm.column_mapped.count() > 1:
        raise Exception("More than one column_raw or column_mapped in mapping")

    print "    Splitting duplicate mapping"
    raw = cm.column_raw.first()
    new_raw = duplicate_column(apps, raw)
    cm.column_raw.clear()
    cm.column_raw.add(new_raw)
    cm.save()

    return True


def forwards(apps, schema_editor):
    Column = apps.get_model("seed", "Column")
    ColumnMapping = apps.get_model("seed", "ColumnMapping")

    # find which columns are not used in column mappings
    double_usage_count = 0

    for c in Column.objects.all():
        cm_duplicates = ColumnMapping.objects.filter(column_raw=c, column_mapped=c)
        if cm_duplicates.count() > 0:
            print "Column {}: {}.{}".format(c.id, c.table_name, c.column_name)
            print "    duplicate 'from' and 'to' column used in same mapping(s)"
            for cm in cm_duplicates:
                double_usage_count += 1
                split_duplicate_mapping(apps, cm)

    # print ""
    # print ""
    # print "-------------------------------------------------------------------"
    # print "Total from/to used duplicate columns: {}".format(double_usage_count)
    # print "Total Columns: {}".format(Column.objects.all().count())


class Migration(migrations.Migration):
    dependencies = [
        ('seed', '0053_auto_20170320_1159'),
    ]

    operations = [
        migrations.RunPython(forwards),
    ]
