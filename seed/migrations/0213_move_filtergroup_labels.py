# Generated by Django 3.2.18 on 2023-12-19 16:15

from django.db import migrations


def move_filter_groups(apps, schema_editor):
    FilterGroup = apps.get_model('seed', 'FilterGroup')
    for filter_group in FilterGroup.objects.all():
        if filter_group.labels.exists() and filter_group.label_logic == 0:  # and
            filter_group.and_labels.set(filter_group.labels.all())
        elif filter_group.labels.exists() and filter_group.label_logic == 1:  # or
            filter_group.or_labels.set(filter_group.labels.all())
        elif filter_group.labels.exists() and filter_group.label_logic == 2:  # exclude
            filter_group.exclude_labels.set(filter_group.labels.all())


def move_filter_groups_back(apps, schema_editor):
    # if the filter group only has one set of labels, we can move those back
    FilterGroup = apps.get_model('seed', 'FilterGroup')
    for filter_group in FilterGroup.objects.all():
        if filter_group.and_labels.exists() and not (filter_group.or_labels.exists() or filter_group.exclude_labels.exists()):
            filter_group.labels.set(filter_group.and_labels.all())
            filter_group.label_logic = 0
            filter_group.save()
        elif filter_group.or_labels.exists() and not (filter_group.and_labels.exists() or filter_group.exclude_labels.exists()):
            filter_group.labels.set(filter_group.or_labels.all())
            filter_group.label_logic = 1
            filter_group.save()
        elif filter_group.exclude_labels.exists() and not (filter_group.and_labels.exists() or filter_group.or_labels.exists()):
            filter_group.labels.set(filter_group.exclude_labels.all())
            filter_group.label_logic = 2
            filter_group.save()


class Migration(migrations.Migration):

    dependencies = [
        ('seed', '0212_add_filtergroup_labels'),
    ]

    operations = [
        migrations.RunPython(move_filter_groups, move_filter_groups_back)
    ]
