# Generated by Django 3.2.20 on 2023-11-08 23:34

import django.db.migrations.operations.special
import django.db.models.deletion
from django.db import migrations, models, transaction

# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# seed.migrations.0211_auto_add_props_to_tree
# seed.migrations.0213_analysis_access_level_instance


class Migration(migrations.Migration):
    @transaction.atomic
    def assign_properties_to_root_access_level(apps, schema_editor):
        Property = apps.get_model('seed', 'Property')
        AccessLevelInstance = apps.get_model('orgs', 'AccessLevelInstance')

        properties = Property.objects.all()
        for property in properties:
            root = AccessLevelInstance.objects.get(organization=property.organization, depth=1)
            property.access_level_instance = root
            property.save()

    @transaction.atomic
    def assign_taxlots_to_root_access_level(apps, schema_editor):
        TaxLot = apps.get_model('seed', 'TaxLot')
        AccessLevelInstance = apps.get_model('orgs', 'AccessLevelInstance')

        taxlots = TaxLot.objects.all()
        for taxlot in taxlots:
            root = AccessLevelInstance.objects.get(organization=taxlot.organization, depth=1)
            taxlot.access_level_instance = root
            taxlot.save()

    @transaction.atomic
    def set_analysis_ali(apps, schema_editor):
        Analysis = apps.get_model('seed', 'Analysis')
        AccessLevelInstance = apps.get_model('orgs', 'AccessLevelInstance')

        analyses = Analysis.objects.all()
        for analysis in analyses:
            org = analysis.organization

            if org is None:
                raise ValueError(f"Analysis with pk {analysis.pk} has no organization, and is thus orphaned. This shouldn't have happened and this Analysis cannot be migrated. Please add a oganization or delete the analysis and try again.")
            else:
                ali = AccessLevelInstance.objects.get(organization=org, depth=1)

            analysis.access_level_instance = ali
            analysis.save()

    replaces = [('seed', '0211_auto_add_props_to_tree'), ('seed', '0212_auto_20230623_1556'), ('seed', '0213_analysis_access_level_instance')]

    dependencies = [
        ('seed', '0210_natural_sort'),
        ('orgs', '0029_auto_20230413_1250'),
    ]

    operations = [
        migrations.AddField(
            model_name='property',
            name='access_level_instance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='orgs.accesslevelinstance'),
        ),
        migrations.AddField(
            model_name='taxlot',
            name='access_level_instance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='taxlots', to='orgs.accesslevelinstance'),
        ),
        migrations.RunPython(
            code=assign_properties_to_root_access_level,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=assign_taxlots_to_root_access_level,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AlterField(
            model_name='property',
            name='access_level_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='orgs.accesslevelinstance'),
        ),
        migrations.AlterField(
            model_name='taxlot',
            name='access_level_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taxlots', to='orgs.accesslevelinstance'),
        ),
        migrations.AddField(
            model_name='propertystate',
            name='raw_access_level_instance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='orgs.accesslevelinstance'),
        ),
        migrations.AddField(
            model_name='propertystate',
            name='raw_access_level_instance_error',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='taxlotstate',
            name='raw_access_level_instance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='orgs.accesslevelinstance'),
        ),
        migrations.AddField(
            model_name='taxlotstate',
            name='raw_access_level_instance_error',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='analysis',
            name='access_level_instance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to='orgs.accesslevelinstance'),
        ),
        migrations.RunPython(
            code=set_analysis_ali,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AlterField(
            model_name='analysis',
            name='access_level_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to='orgs.accesslevelinstance'),
        ),
    ]
