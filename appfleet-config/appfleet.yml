---
appfleet_version: 2.2.1

project_handle: seedcerl
app_name: seedweb
data_class: mod
framework_type: django

git_source:
  host: github.com
  owner: seed-platform
  repo: seed
  branch: main
  path: /main

tags:
  billingId: '240024'
  org: seedcerl
  owner: nlong

releases:
  - dev
  - stage
  - prod

host_name:
  $release_name:
    prod: ${self.project_handle}-${self.app_name}-${release_name}.stratus.nrel.gov
    stage: ${self.project_handle}-${self.app_name}-${release_name}.stratus.nrel.gov
    dev: ${self.project_handle}-${self.app_name}-${release_name}.stratus.nrel.gov

target_groups:
  - name: ${self.project_handle}-${self.app_name}-${release_name}
    load_balancer:
      $release_name:
        dev: alb-int-mod05-dev
        stage: alb-int-mod05-stage
        prod: alb-ext-mod05-prod
    container_name: main
    container_port: 80
    port: 80
    protocol: HTTP
    protocol_version: HTTP1
    sticky: true
    sticky_duration: 86400
    target_type: instance
    healthcheck:
      path: /api/health_check/
      port: traffic-port
      protocol: HTTP
      interval: 120
      timeout: 60
      threshold_healthy: 2
      threshold_unhealthy: 5
      http_healthy_status: '200,301,302,400'

ecs_service:
  name: ${self.project_handle}-${self.app_name}-${release_name}
  task_role: ${self.project_handle}-${self.app_name}-ecstask-iam-role
  task_memory: 2048
  grace_period: 300
  task_execution_role: nrel-ops-ecs-generic-task-execution-role
  launch_type: EC2
  cluster:
    $release_name:
      dev: ecs-mod01-dev
      stage: ecs-mod01-stage
      prod: ecs-seedcerl-prod
  replicas:
    $release_name:
      dev: 1
      stage: 2
      prod: 2
  deployment_config:
    circuit_breaker:
      enable: true
      rollback: true
    maximum_percent:
      $release_name:
        prod: 200
        stage: 200
        dev: 100
    minimum_healthy_percent:
      $release_name:
        prod: 50
        stage: 0
        dev: 0

volumes:
  - name: &host-media seed_media
    host_path: /${self.project_handle}-${self.app_name}-${release_name}

containers:
  - name: main
    image:
      $release_name:
        dev: 991404956194.dkr.ecr.us-west-2.amazonaws.com/nrel-${self.project_handle}-${self.app_name}
        stage: 991404956194.dkr.ecr.us-west-2.amazonaws.com/nrel-${self.project_handle}-${self.app_name}
        prod: 991404956194.dkr.ecr.us-west-2.amazonaws.com/nrel-${self.project_handle}-${self.app_name}
    healthcheck:
      command:
        - 'CMD-SHELL'
        - 'curl -f http://localhost/api/health_check/ || exit 1'
      interval: 120
      retries: 3
      timeout: 60
      grace_period: 300
    ssm_parameters:
      - /nrel/${self.project_handle}-${self.app_name}/${release_name}/
    cpu:
      $release_name:
        dev: 512
        stage: 512
        prod: 512
    memory:
      $release_name:
        dev: 512
        stage: 512
        prod: 1024
    port_map:
      - '80:80'
    volume_mounts:
      - volume_name: *host-media
        container_path: /seed/media
    secrets:
      - name: /nrel/ec2/${self.project_handle}_${self.app_name}/postgres/${self.data_class}/${release_name}/${self.project_handle}_${self.app_name}
        map:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          DB_DRIVER: engine
          POSTGRES_HOST: host
          POSTGRES_PORT: port
          POSTGRES_DB: database
    depends_on:
      - celery

  - name: celery
    image:
      $release_name:
        dev: 991404956194.dkr.ecr.us-west-2.amazonaws.com/nrel-${self.project_handle}-${self.app_name}
        stage: 991404956194.dkr.ecr.us-west-2.amazonaws.com/nrel-${self.project_handle}-${self.app_name}
        prod: 991404956194.dkr.ecr.us-west-2.amazonaws.com/nrel-${self.project_handle}-${self.app_name}
    ssm_parameters:
      - /nrel/${self.project_handle}-${self.app_name}/${release_name}/
    cpu:
      $release_name:
        dev: 512
        stage: 512
        prod: 512
    memory:
      $release_name:
        dev: 256
        stage: 256
        prod: 1024
    port_map: []
    volume_mounts:
      - volume_name: *host-media
        container_path: /seed/media
    secrets:
      - name: /nrel/ec2/${self.project_handle}_${self.app_name}/postgres/${self.data_class}/${release_name}/${self.project_handle}_${self.app_name}
        map:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          DB_DRIVER: engine
          POSTGRES_HOST: host
          POSTGRES_PORT: port
          POSTGRES_DB: database
    command: /seed/docker/start_celery_docker.sh
    environment:
      CONTAINER_ROLE: celery
