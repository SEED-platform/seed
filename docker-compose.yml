# Docker Compose creates multiple containers on a single machine.
# run `docker-compose up` to create and run/link the containers
version: "3.4"
services:
  db-postgres:
    container_name: seed_postgres
    image: timescale/timescaledb-postgis:latest-pg12
    environment:
      - POSTGRES_DB=seed
      - POSTGRES_USER=seed
      - POSTGRES_PASSWORD=super-secret-password
    volumes:
      - seed_pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    logging:
      options:
        max-size: 50m
        max-file: "5"
  db-redis:
    container_name: seed_redis
    image: redis:5.0.1
  web:
    container_name: seed_web
    image: seedplatform/seed:latest
    build: .
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SES_REGION_NAME
      - AWS_SES_REGION_ENDPOINT
      - BSYNCR_SERVER_HOST
      - BSYNCR_SERVER_PORT
      - SERVER_EMAIL
      - POSTGRES_DB=seed
      - POSTGRES_PORT=5432
      - POSTGRES_USER=seed
      - POSTGRES_PASSWORD=super-secret-password
      # - REDIS_HOST=optional-need-to-configure-redis
      # - REDIS_PASSWORD=optional-need-to-configure-redis
      # - WEB_HOST=optional-if-web-container-not-named-web
      - SEED_ADMIN_USER=user@seed-platform.org
      - SEED_ADMIN_PASSWORD=super-secret-password
      - SEED_ADMIN_ORG=default
      - SECRET_KEY=ARQV8qGuJKH8sGnBf6ZeEdJQRKLTUhsvEcp8qG9X9sCPXvGLhdxqnNXpZcy6HEyf
      - DJANGO_SETTINGS_MODULE=config.settings.docker
      # Sentry configuration if you want to use it (make sure to enable on web-celery container too)
      # - SENTRY_RAVEN_DSN=https://<userid>@<ordid>.ingest.sentry.io/<jobid>
      # - SENTRY_JS_DSN=https://<userid>@<ordid>.ingest.sentry.io/<jobid>
      # Recaptcha for testing:
      # https://developers.google.com/recaptcha/docs/faq#id-like-to-run-automated-tests-with-recaptcha.-what-should-i-do
      - GOOGLE_RECAPTCHA_SITE_KEY=6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
      - GOOGLE_RECAPTCHA_SECRET_KEY=6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
    depends_on:
      - db-redis
      - db-postgres
    volumes:
      - seed_media:/seed/media
    ports:
      - "80:80"
    logging:
      options:
        max-size: 50m
        max-file: "5"
  web-celery:
    container_name: seed_celery
    image: seedplatform/seed:latest
    build: .
    command: /seed/docker/start_celery_docker.sh
    environment:
      - BSYNCR_SERVER_HOST
      - BSYNCR_SERVER_PORT
      - POSTGRES_DB=seed
      - POSTGRES_PORT=5432
      - POSTGRES_USER=seed
      - POSTGRES_PASSWORD=super-secret-password
      # - REDIS_PASSWORD=optional-need-to-configure-redis
      - SECRET_KEY=ARQV8qGuJKH8sGnBf6ZeEdJQRKLTUhsvEcp8qG9X9sCPXvGLhdxqnNXpZcy6HEyf
      - DJANGO_SETTINGS_MODULE=config.settings.docker
      # Sentry configuration if you want to use it (make sure to enable on web container too)
      # - SENTRY_RAVEN_DSN=https://<userid>@<ordid>.ingest.sentry.io/<jobid>
      # - SENTRY_JS_DSN=https://<userid>@<ordid>.ingest.sentry.io/<jobid>
      - NUMBER_OF_WORKERS
    depends_on:
      - db-redis
      - db-postgres
      - web
    volumes:
      - seed_media:/seed/media
    logging:
      options:
        max-size: 50m
        max-file: "5"
volumes:
  seed_pgdata:
    external: true
  seed_media:
    external: true
