name: CI

on:
  pull_request:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      # -
      #   name: Login to DockerHub
      #   uses: docker/login-action@v1 
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build Docker dev image
        uses: docker/build-push-action@v2
        with:
          tags: seedplatform/seed:dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

  # test_backend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     -
  #       uses: actions/checkout@v2
  #     # -
  #     #   name: Cache Docker layers
  #     #   uses: actions/cache@v2
  #     #   with:
  #     #     path: /tmp/.buildx-cache
  #     #     key: ${{ runner.os }}-buildx-${{ github.head_ref }}
  #     #     restore-keys: |
  #     #       ${{ runner.os }}-buildx-
  #     # -
  #     #   name: Build Docker image
  #     #   uses: docker/build-push-action@v2
  #     #   with:
  #     #     tags: seedplatform/seed:dev
  #     #     cache-from: type=local,src=/tmp/.buildx-cache
  #     #     cache-to: type=local,dest=/tmp/.buildx-cache
  #     -
  #       name: Start the stack
  #       run: |
  #         docker volume create --name=seed_pgdata
  #         docker volume create --name=seed_media
  #         docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d
  #     -
  #       name: Test
  #       run: |
  #         docker ps
  #         docker exec seed_web_1 touch /seed/config/settings/local_untracked.py
  #         docker exec seed_web_1 python manage.py test --settings=config.settings.docker_dev
  test_frontend:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        uses: actions/setup-node@v1
      -
        uses: actions/checkout@v2
      -
        name: Install deps
        run: |
          npm install
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Build Docker dev image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile-dev
          tags: seedplatform/seed:dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      -
        name: debug docker build
        run: docker images
      -
        name: Start the stack
        run: |
          docker volume create --name=seed_pgdata
          docker volume create --name=seed_media
          COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d
      -
        name: Test
        run: |
          docker ps
          docker exec seed_web_1 ./manage.py migrate
          docker exec seed_web_1 ./manage.py create_default_user --username=demo@example.com --password=demo123
          docker exec seed_web_1 /bin/bash -c 'echo "y" | ./manage.py make_superuser --user demo@example.com'
          ./node_modules/protractor/bin/webdriver-manager update --gecko=false
          ./node_modules/protractor/bin/protractor seed/static/seed/tests/protractor-tests/protractorConfigCoverage.js
  formatting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tox_env: [flake8, docs]
    steps:
      -
        uses: actions/checkout@v2
      -
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      -
        name: Install deps
        run: |
          pip install --upgrade pip
          pip install tox==2.7.0
          sudo add-apt-repository ppa:ubuntugis/ppa
          sudo apt-get update
          sudo apt-get install gdal-bin
      -
        name: Run tox
        run: tox -e ${{ matrix.tox_env }}