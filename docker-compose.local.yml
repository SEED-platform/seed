# Docker Compose for deployment using a local registry.
# Must set the following environment variables
#   POSTGRES_DB
#   POSTGRES_PORT
#   POSTGRES_USER
#   POSTGRES_PASSWORD
#   SEED_ADMIN_USER
#   SEED_ADMIN_PASSWORD
#   SEED_ADMIN_ORG
#   SECRET_KEY

version: "3.4"
services:
  db-postgres:
    container_name: seed_postgres
    image: 127.0.0.1:5000/postgres-seed
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - seed_pgdata:/var/lib/postgresql/data
      - $HOME/seed-backups:/backups
    ports:
      - "5432:5432"
    logging:
      options:
        max-size: 50m
        max-file: "5"
    restart: unless-stopped
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  db-redis:
    container_name: seed_redis
    image: 127.0.0.1:5000/redis
    logging:
      options:
        max-size: 50m
        max-file: "5"
    restart: unless-stopped
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  web:
    container_name: seed_web
    image: 127.0.0.1:5000/seed
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SES_REGION_NAME
      - AWS_SES_REGION_ENDPOINT
      - SERVER_EMAIL
      - POSTGRES_DB
      - POSTGRES_PORT=5432
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      # - REDIS_PASSWORD
      # - REDIS_HOST
      # - WEB_HOST
      - SEED_ADMIN_USER
      - SEED_ADMIN_PASSWORD
      - SEED_ADMIN_ORG
      - SECRET_KEY
      # Pass the Sentry config to the containers
      - SENTRY_RAVEN_DSN
      - SENTRY_JS_DSN
      - DJANGO_SETTINGS_MODULE=config.settings.docker
      # Recaptcha for testing:
      # https://developers.google.com/recaptcha/docs/faq#id-like-to-run-automated-tests-with-recaptcha.-what-should-i-do
      - GOOGLE_RECAPTCHA_SITE_KEY=6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
      - GOOGLE_RECAPTCHA_SECRET_KEY=6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
    depends_on:
      - db-redis
      - db-postgres
    volumes:
      - seed_media:/seed/media
    ports:
      - "80:80"
    logging:
      options:
        max-size: 50m
        max-file: "5"
    restart: unless-stopped
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  web-celery:
    container_name: seed_celery
    image: 127.0.0.1:5000/seed
    environment:
      - POSTGRES_DB
      - POSTGRES_PORT=5432
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - SECRET_KEY
      - SENTRY_JS_DSN
      - SENTRY_RAVEN_DSN
      - DJANGO_SETTINGS_MODULE=config.settings.docker
      - NUMBER_OF_WORKERS
    depends_on:
      - db-redis
      - db-postgres
      - web
    volumes:
      - seed_media:/seed/media
    command: /seed/docker/start_celery_docker.sh
    logging:
      options:
        max-size: 50m
        max-file: "5"
    restart: unless-stopped
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  #oep-city-1:
  # This is a placeholder. If needed, follow the instructions to enable: https://cloud.docker.com/u/seedplatform/repository/docker/seedplatform/oep
  #container_name: seed_oep
  #image: 127.0.0.1:5000/oep
  #environment:
  #  - OEP_DISABLED=true
  #restart: unless-stopped
volumes:
  seed_pgdata:
    external: true
  seed_media:
    external: true
