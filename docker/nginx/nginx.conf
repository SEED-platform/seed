# /etc/nginx/nginx.conf

user nginx;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log /var/log/nginx/error.log warn;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

# Uncomment to include files with config snippets into the root context.
# NOTE: This will be enabled by default in Alpine 3.15.
#include /etc/nginx/conf.d/*.conf;

events {
    # The maximum number of simultaneous connections that can be opened by
    # a worker process.
    worker_connections 1024;
}

http {
    # Includes mapping of file name extensions to MIME types of responses
    # and defines the default type.
    include mime.types;
    default_type application/octet-stream;

    # Name servers used to resolve names of upstream servers into addresses.
    # It's also needed when using tcpsocket and udpsocket in Lua modules.
    #resolver 1.1.1.1 1.0.0.1 2606:4700:4700::1111 2606:4700:4700::1001;

    # Don't tell nginx version to the clients. Default is 'on'.
    server_tokens off;

    # Specifies the maximum accepted body size of a client request, as
    # indicated by the request header Content-Length. If the stated content
    # length is greater than this size, then the client receives the HTTP
    # error code 413. Set to 0 to disable. Default is '1m'.
    client_max_body_size 1m;

    # Sendfile copies data between one FD and other from within the kernel,
    # which is more efficient than read() + write(). Default is off.
    sendfile on;

    # Causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames. Default is 'off'.
    tcp_nopush on;

    # Enable gzipping of responses
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types application/javascript application/json application/x-javascript text/javascript;
    gzip_types application/xml image/svg+xml text/xml;
    gzip_types image/x-icon;
    gzip_types text/css text/plain;


    # Helper variable for proxying websockets.
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }


    # Specifies the main log format.
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Sets the path, format, and configuration for a buffered log write.
    access_log /var/log/nginx/access.log main;


    # Includes virtual hosts configs.
    # include /etc/nginx/http.d/*.conf;

    # the upstream component nginx needs to connect to
    upstream seed_upstream {
        server unix:///tmp/uwsgi-seed.sock;
    }

    # helper to apply CSP only to html responses
    map $sent_http_content_type $csp_for_html {
        ~^text/html "$CSP";
        default     "";
    }

    # configuration of the server
    server {

        listen      80 default_server;
        server_name localhost;
        charset     utf-8;

        # increase the timeouts (large files can take a while to upload)
        # These are probably not needed, but increasing anyway
        proxy_connect_timeout       600s;
        proxy_send_timeout          600s;
        proxy_read_timeout          600s;
        send_timeout                600s;

        # add error logs
        error_log logs/error.log warn;

        # max upload size
        client_max_body_size 75M;   # adjust to taste

        # set $CSP variable
        include seed-csp.conf;

        include seed-security-headers.conf;

        # configure maintenance page redirect
        if (-f /seed/collected_static/maintenance.html) {
            return 503;
        }
        error_page 503 @maintenance;
        location @maintenance {
            rewrite ^(.*)$ /maintenance.html break;
        }

        location /protected/ {
            internal;
            alias   /seed/media/;
        }

        location = /favicon.ico {
            access_log off;
            log_not_found off;
        }

        location /api {
            include seed-uwsgi.conf;
            include seed-security-headers.conf;
            # Disable API caching
            add_header Cache-Control "no-cache, no-store";
        }

        location /static {
            alias /seed/collected_static;
            types {
                text/css css;
                application/javascript js;
                image/svg+xml svg;
            }
            default_type application/octet-stream;
            index nonextistent;
            autoindex off;
            expires 1d;
            include seed-security-headers.conf;
            add_header Cache-Control "public";
        }

        location / {
            include seed-uwsgi.conf;
        }
    }
}

daemon off;
